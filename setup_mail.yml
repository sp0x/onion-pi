# This ansible playbook performs setup of a RaspberryPi providing mail support.
#
# Call from remote:
#
#   $ ansible-playbook -i 192.168.1.131, \
#       --become \
#       --ask-pass \
#       --ask-become-pass \
#       --user jason setup_mail.yml \
#       --extra-vars "hostname=onionpi username=jason gmail_username=jasonthrasher gmail_password=SECRET"
#
# with the real IP used instead.
#
# You may want to fiddle with the settings in `vars`.
#
- hosts: all
  become: false
  become_user: root
  vars:
      - hostname: "{{ hostname }}"
      - username: "{{ username }}"
      - gmail_username: "{{ gmail_username }}"
      - gmail_password: "{{ gmail_password }}"

  tasks:
  - name: Update system
    become: true
    apt: upgrade=safe update_cache=yes cache_valid_time=36000

  - name: Install additionally needed packages
    become: true
    package:
        name: "{{ item }}"
        state: present
    with_items:
        - "exim4"

  - name: setup exim4-config /etc/exim4/update-exim4.conf.conf
    become: true
    template:
        src: "update-exim4.conf.conf.j2"
        dest: "/etc/exim4/update-exim4.conf.conf"
        owner: root
        group: root
        mode: 0644
        backup: yes

  - name: add account info to /etc/exim4/passwd.client
    become: true
    blockinfile:
        dest: "/etc/exim4/passwd.client"
        block: |
            gmail-smtp.l.google.com:{{ gmail_username }}@gmail.com:{{ gmail_password }}
            *.google.com:{{ gmail_username }}@gmail.com:{{ gmail_password }}
            smtp.gmail.com:{{ gmail_username }}@gmail.com:{{ gmail_password }}

  - name: setup mail /etc/aliases
    become: true
    template:
        src: "aliases.j2"
        dest: "/etc/aliases"
        owner: root
        group: root
        mode: 0644
        backup: yes

  - name: reload aliases
    become: true
    command: newaliases

  - name: change full name of email sender
    become: true
    command: chfn --full-name "{{ username }} @ {{ hostname }}" {{ username }}

  - name: Sending an e-mail using the remote machine, not the Ansible controller node
    mail:
      host: localhost
      port: 25
      from: root@localhost
      to: jason@localhost
      subject: Ansible-report
      body: System {{ ansible_hostname }} has been successfully provisioned.

  - name: send email via shell
    shell: echo "This message was sent from the ansible config via a shell command" | mail -s "This is the subject line `date`" root@localhost
