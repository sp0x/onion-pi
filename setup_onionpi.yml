# This ansible playbook performs setup of a
# RaspberryPi providing a tor-proxied wifi accesspoint.
#
# Call from remote:
#
# ansible-playbook -i 192.168.1.131, \
#  --become \
#  --ask-pass \
#  --ask-become-pass \
#  --user jason setup_onionpi.yml \
#  --extra-vars "hostname=onionpi dns_servers=8.8.8.8,8.8.4.4"
#
# more here: https://learn.adafruit.com/onion-pi?view=all
#
- hosts: all
  become: false
  become_user: root
  vars:
      - hostname: "{{ hostname }}"
      - dns_servers: "{{ dns_servers }}"

  handlers:
  - name: restart hostapd
    become: true
    service:
        name: "hostapd"
        state: restarted
  - name: restart dhcpcd
    become: true
    service:
        name: "dhcpcd"
        state: restarted
  - name: restart tor
    become: true
    service:
        name: "tor"
        state: restarted
  - name: restart dnsmasq
    become: true
    service:
        name: "dnsmasq"
        state: restarted
  - name: restart netfilter-persistent
    become: true
    service:
        name: "netfilter-persistent"
        state: restarted

  tasks:
  - name: Update system
    become: true
    tags:
      - update
    apt: upgrade=safe update_cache=yes cache_valid_time=36000

  - name: Install additionally needed packages
    become: true
    tags:
      - install
    package:
        name: "{{ item }}"
        state: present
    with_items:
        - "rng-tools"
        - "dnsmasq"
        - "iptables-persistent"
        - "bridge-utils"
        - "hostapd"
        - "tor"

  #
  # Pin wlan device names
  # see: https://www.raspberrypi.org/forums/viewtopic.php?f=36&t=198946
  #
  - name: pin wlan0 to builtin wifi device
    become: true
    tags:
      - pin-wifi
    copy:
        src: "76-netnames.rules"
        dest: "/etc/udev/rules.d/76-netnames.rules"
        owner: root
        group: root
        mode: 0644
        backup: yes

  - name: configure static IP for wlan0
    become: true
    tags:
      - dhcpcd
    blockinfile:
        dest: "/etc/dhcpcd.conf"
        block: |
            denyinterfaces wlan0
            denyinterfaces eth0

            interface wlan0
                static ip_address=192.168.4.1/24
                nohook wpa_supplicant
#    notify: restart dhcpd

  - name: configure dnsmasq
    become: true
    tags:
      - dnsmasq
    blockinfile:
        dest: "/etc/dnsmasq.conf"
        block: |
            interface=wlan0      # Use the require wireless interface - usually wlan0
              dhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24h
#    notify: restart dnsmasq

  #
  # configure hostapd
  #
  - name: install hostapd.conf
    become: true
    tags:
      - hostapd-install
    copy:
        src: "hostapd.conf.tmpl"
        dest: "/etc/hostapd/hostapd.conf"
        owner: root
        group: root
        mode: 0600
        backup: yes
#    notify: restart hostapd

  - name: tell hostapd.conf location
    become: true
    tags:
      - hostapd-location
    replace:
        dest: "/etc/default/hostapd"
        regexp: '^#DAEMON_CONF=""'
        replace: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'
#    notify: restart hostapd

  #
  # the original config disabled ipv4, so not sure why enabling here
  #
  - name: configure ipv4 forwarding at boot time
    become: true
    tags:
      - configure-ipv4
    replace:
        dest: "/etc/sysctl.conf"
        regexp: "^#net.ipv4.ip_forward=1"
        replace: "net.ipv4.ip_forward=1"
#    notify: enable ipv4 forwarding immediately

  #
  # iptables-persistent should install the service netfilter-persistent, which reads the rules on boot
  #
  - name: install ipv4 firewall rules
    become: true
    tags:
      - firewall-rules
    copy:
        src: "rules.v4"
        dest: "/etc/iptables/rules.v4"
        owner: root
        group: root
        mode: 0644
        backup: yes
#    notify: restart netfilter-persistent

  # if needed, remove the bridge with
  # ifconfig br0 down && brctl delbr br0 && rm /tmp/br0_exists
  - name: add a new bridge
    become: true
    tags:
      - add-bridge
    shell: |
      brctl addbr br0
      brctl addif br0 eth0
      touch /tmp/br0_exists
    args:
      creates: /tmp/br0_exists

  - name: setup interfaces
    become: true
    tags:
      - interfaces
    copy:
        src: "interfaces.tmpl"
        dest: "/etc/network/interfaces"
        owner: root
        group: root
        mode: 0644
        backup: yes

  #
  # install tor and related fw rules
  #
  - name: tweak torrc
    become: true
    tags:
      - torrc
    blockinfile:
        dest: "/etc/tor/torrc"
        #insertafter: "^## https://www.torproject.org/docs/faq#torrc"
        block: |
            Log notice file /var/log/tor/notices.log
            VirtualAddrNetwork 10.192.0.0/10
            AutomapHostsSuffixes .onion,.exit
            AutomapHostsOnResolve 1
            TransPort 192.168.42.1:9040
            DNSPort 192.168.42.1:53
        backup: yes
#    notify: restart tor

  #
  # activate new services
  #
#  - name: enable service hostapd
#    become: true
#    systemd:
#        name: hostapd
#        state: started
#        enabled: true
#
#  - name: enable service tor
#    become: true
#    systemd:
#        name: tor
#        state: started
#        enabled: true
